#!/bin/bash

#Inherits environment from runner
p7zip="$sevenZip"
echo "my 7zip location is $my7zip"
IFS=$'\n'
#get the rom names.  -slt flag to p7zip seems to print them out in most usable fashion
romNames=($($p7zip l -slt "$my7zip" | grep "Path =" | sed -e 's/^Path = *//g'))
unset IFS

#get rid of that first element, its the path to the 7zip itself
romNames=("${romNames[@]:1}")
#now we have the correct number of items....
numGoodDumps=${#romNames[@]}
#now we add the all option to the head of the list
all="Extract All Files"

echo "Number of dumps is $numGoodDumps"
PS3="Please enter the number of the rom to extract (0 aborts, "all" for $all): " #TODO zero to abort?
menu() {
	select choice in "${romNames[@]}"; do #the 1 slices the array, first entry is the 7zip itself
		if [[ $REPLY = all ]]; then 
			rom=$all		
			break 
		fi
		if (( $REPLY>0 && $REPLY<=$numGoodDumps)); then
			echo "you chose $choice"
			rom=$choice; #because menu is 1 based but array is zero based			
			break
		fi
		if (( $REPLY<=0 )); then exit; fi
		echo "Invalid Option Please choose again"
	done
}

menu

sevenZipCall() {
	if [[ $rom = $all ]]; then 
		$p7zip e -y -o"$tempDir" "$my7zip" "${romNames[@]}" #if you want to extract all
		PS3="which of those files to pass to emulator?"
		menu
	else
		$p7zip e -y -o"$tempDir" "$my7zip" "$rom" #TODO: if something goes wrong here, it extracts ALL files....
	fi
}

sevenZipCall

export pathToRom="$tempDir/$rom"





